((function(window){'use strict';const VERSION='1.0.1';function elementsMatchCustomTokens(elements=[]){if(!elements?.length)return false;const ids=new Set(elements.map(e=>e?.attr_id).filter(Boolean));const classes=new Set(elements.flatMap(e=>(e?.attr_class||[])).filter(Boolean));for(const id of ids)if(CustomTokens.id.has(id))return true;for(const cls of classes)if(CustomTokens.class.has(cls))return true;return false}function shouldSuppressAutocapture(props={}){try{const now=Date.now();if(now-(window.__ga_lastCustomEventAt||0)<600)return true;if(now-(window.__ga_lastCustomIntentAt||0)<600)return true;const elements=props.$elements||[];if(elementsMatchCustomTokens(elements))return true;for(const el of elements){const classes=el?.attr_class||[];if(classes.includes('ph-no-capture'))return true}}catch{}return false}function initializePostHog(apiKey,apiHost,options={}){console.log('üîß Initializing PostHog (autocapture only)...');!function(t,e){var o,n,p,r;e.__SV||(window.posthog=e,e._i=[],e.init=function(i,s,a){function g(t,e){var o=e.split(".");2==o.length&&(t=t[o[0]],e=o[1]);t[e]=function(){t.push([e].concat(Array.prototype.slice.call(arguments,0)))}}(p=t.createElement("script")).type="text/javascript",p.async=!0,p.src=s.api_host+"/static/array.js",(r=t.getElementsByTagName("script")[0]).parentNode.insertBefore(p,r);var u=e;for(void 0!==a?u=e[a]=[]:a="posthog",u.people=u.people||[],u.toString=function(t){var e="posthog";return"posthog"!==a&&(e+="."+a),t||(e+=" (stub)"),e},u.people.toString=function(){return u.toString(1)+".people (stub)"},o="capture identify alias people.set people.set_once set_config register register_once unregister opt_out_capturing has_opted_out_capturing opt_in_capturing reset isFeatureEnabled onFeatureFlags getFeatureFlag getFeatureFlagPayload reloadFeatureFlags group updateEarlyAccessFeatureEnrollment getEarlyAccessFeatures getActiveMatchingSurveys getSurveys onSessionId".split(" "),n=0;n<o.length;n++)g(u,o[n]);e._i.push([i,s,a])},e.__SV=1)}(document,window.posthog||[]);posthog.init(apiKey,{api_host:apiHost,debug:options.debug??true,autocapture:true,capture_pageview:options.capture_pageview??true,capture_pageleave:options.capture_pageleave??true,session_recording:Object.assign({recordCrossOriginIframes:!0,maskAllInputs:!1,captureKeystrokes:!1},options.session_recording||{}),loaded:function(){console.log('‚úÖ PostHog loaded (autocapture enabled)')}});return true}const CustomTokens={class:new Set(),id:new Set()};function collectTokensFromSelector(selector){try{const parts=String(selector).split(',').map(s=>s.trim()).filter(Boolean);parts.forEach(p=>{[...p.matchAll(/#([a-zA-Z0-9_-]+)/g)].forEach(m=>GenericAnalytics.customSelectorTokens.push({type:'id',value:m[1]}));[...p.matchAll(/\.([a-zA-Z0-9_-]+)/g)].forEach(m=>GenericAnalytics.customSelectorTokens.push({type:'class',value:m[1]}))})}catch{}}function tagNoCaptureNow(selector){try{document.querySelectorAll(selector).forEach(el=>{el.classList?.add?.('ph-no-capture');el.setAttribute?.('data-ph-no-capture','true')})}catch{}}function observeAndTag(selector){try{const mo=new MutationObserver(()=>tagNoCaptureNow(selector));mo.observe(document.documentElement,{childList:!0,subtree:!0})}catch{}}function addIntentCapture(selector){try{document.addEventListener('pointerdown',e=>{let el=e.target;if(!el)return;if(el.matches?.(selector)||el.closest?.(selector)){const target=el.matches?.(selector)?el:el.closest(selector);target.classList?.add?.('ph-no-capture');target.setAttribute?.('data-ph-no-capture','true');window.__ga_lastCustomIntentAt=Date.now()}},!0)}catch{}}function initPosthog(apiKey,apiHost,debug){posthog.init(apiKey,{api_host:apiHost,debug:!!debug,autocapture:!0,capture_pageview:!0,capture_pageleave:!0,loaded:()=>console.log('‚úÖ PostHog loaded (autocapture enabled)')})}const GenericAnalytics={version:VERSION,clientId:null,workflows:[],initialized:!1,debug:!1,preferCustomOverAutocapture:!0,customSelectorTokens:[],init(config){if(!config||!config.apiKey){console.error('GenericAnalytics: Missing required apiKey in config');return}this.clientId=config.clientId||'askme-ai-app';this.workflows=Array.isArray(config.workflows)?config.workflows:[];this.debug=!!config.debug;this.autocapture=!0;this.useBuiltInPageview=config.useBuiltInPageview!==!1;this.enableCustomDomTracking=!1;this.preferCustomOverAutocapture=!1;console.log('üîß GenericAnalytics initializing (autocapture only)',{clientId:this.clientId,debug:this.debug});try{initializePostHog(config.apiKey,config.apiHost,{debug:this.debug,autocapture:!0,capture_pageview:config.capture_pageview??!0,capture_pageleave:config.capture_pageleave??!0,session_recording:config.session_recording});this.initialized=!0;setTimeout(()=>{if(this.useBuiltInPageview)this.trackPageView();if(window.posthog){try{window.posthog.register({client_id:this.clientId})}catch{}}this.trackEvent('analytics_initialized',{version:VERSION,client_id:this.clientId,mode:'autocapture_only'})},300)}catch(initError){console.error('‚ùå PostHog initialization error:',initError)}},registerCustomSelector(){return},setupTracking(){},trackPageView(url=null,properties={}){const pageUrl=url||window.location.href;const pathname=typeof URL!=='undefined'?new URL(pageUrl,window.location.origin).pathname:window.location.pathname;if(window.posthog){window.posthog.capture('$pageview',Object.assign({$current_url:pageUrl,$pathname:pathname,page_title:document.title},properties))}return this.trackEvent('page_view',Object.assign({page_url:pageUrl,page_title:document.title,page_type:this.getPageType()},properties))},trackEvent(eventName,extraProps={}){if(!window.posthog){console.warn('PostHog not available, cannot track event:',eventName);return!1}window.__ga_lastCustomEventAt=Date.now();const eventData=Object.assign({client_id:this.clientId,timestamp:new Date().toISOString(),url:window.location.href,user_agent:navigator.userAgent,viewport_size:`${window.innerWidth}x${window.innerHeight}`,page_title:document.title,referrer:document.referrer},extraProps);try{window.posthog.capture(eventName,eventData);if(this.debug)console.log('üìä Event tracked:',eventName,eventData);return!0}catch(error){console.error('‚ùå Error tracking event:',error);return!1}},identify(userId,properties={}){if(!window.posthog){console.warn('PostHog not available, cannot identify user');return!1}try{window.posthog.identify(userId,Object.assign({client_id:this.clientId},properties));console.log('üë§ User identified:',userId);return!0}catch(error){console.error('‚ùå Error identifying user:',error);return!1}},getPageType(){const path=window.location.pathname.toLowerCase();if(path===''||path==='/')return'home';if(path.includes('/login')||path.includes('/signin'))return'auth';if(path.includes('/signup')||path.includes('/register'))return'registration';if(path.includes('/dashboard'))return'dashboard';if(path.includes('/profile')||path.includes('/settings'))return'profile';if(path.includes('/chat')||path.includes('/conversation'))return'chat';if(path.includes('/pricing')||path.includes('/plans'))return'pricing';if(path.includes('/about'))return'about';if(path.includes('/contact'))return'contact';if(path.includes('/help')||path.includes('/support'))return'support';return'other'},sendTestEvent(){console.log('üß™ Sending manual test event...');const success=this.trackEvent('manual_test_event',{test_type:'manual_trigger',test_time:new Date().toISOString(),posthog_available:!!window.posthog});if(success){console.log('‚úÖ Manual test event sent successfully')}else{console.log('‚ùå Failed to send manual test event')}return success},getStatus(){return{version:VERSION,initialized:this.initialized,posthog_available:!!window.posthog,client_id:this.clientId,workflows_count:this.workflows.length}}};window.GenericAnalytics=GenericAnalytics;window.askMeAnalytics=GenericAnalytics;console.info(`‚úÖ GenericAnalytics v${VERSION} loaded`);})(window));